#pragma once

#include <array>
#include <cstdint>
#include <stdexcept>


namespace spd {
    enum class Illuminant {
        D65,
        D50,
        A,
    };

    enum class Sensor {
        CIE1931,
        CIE1964,
    };

    static constexpr uint32_t D65_MIN = 360;
    static constexpr uint32_t D65_MAX = 830;
    static constexpr auto D65 = std::array{
        46.6383f, 47.1834f, 47.7285f, 48.2735f, 48.8186f, 49.3637f, 49.9088f, 50.4539f, 50.9989f, 51.544f,  52.0891f,
        51.8777f, 51.6664f, 51.455f,  51.2437f, 51.0323f, 50.8209f, 50.6096f, 50.3982f, 50.1869f, 49.9755f, 50.4428f,
        50.91f,   51.3773f, 51.8446f, 52.3118f, 52.7791f, 53.2464f, 53.7137f, 54.1809f, 54.6482f, 57.4589f, 60.2695f,
        63.0802f, 65.8909f, 68.7015f, 71.5122f, 74.3229f, 77.1336f, 79.9442f, 82.7549f, 83.628f,  84.5011f, 85.3742f,
        86.2473f, 87.1204f, 87.9936f, 88.8667f, 89.7398f, 90.6129f, 91.486f,  91.6806f, 91.8752f, 92.0697f, 92.2643f,
        92.4589f, 92.6535f, 92.8481f, 93.0426f, 93.2372f, 93.4318f, 92.7568f, 92.0819f, 91.4069f, 90.732f,  90.057f,
        89.3821f, 88.7071f, 88.0322f, 87.3572f, 86.6823f, 88.5006f, 90.3188f, 92.1371f, 93.9554f, 95.7736f, 97.5919f,
        99.4102f, 101.228f, 103.047f, 104.865f, 106.079f, 107.294f, 108.508f, 109.722f, 110.936f, 112.151f, 113.365f,
        114.579f, 115.794f, 117.008f, 117.088f, 117.169f, 117.249f, 117.33f,  117.41f,  117.49f,  117.571f, 117.651f,
        117.732f, 117.812f, 117.517f, 117.222f, 116.927f, 116.632f, 116.336f, 116.041f, 115.746f, 115.451f, 115.156f,
        114.861f, 114.967f, 115.073f, 115.18f,  115.286f, 115.392f, 115.498f, 115.604f, 115.711f, 115.817f, 115.923f,
        115.212f, 114.501f, 113.789f, 113.078f, 112.367f, 111.656f, 110.945f, 110.233f, 109.522f, 108.811f, 108.865f,
        108.92f,  108.974f, 109.028f, 109.082f, 109.137f, 109.191f, 109.245f, 109.3f,   109.354f, 109.199f, 109.044f,
        108.888f, 108.733f, 108.578f, 108.423f, 108.268f, 108.112f, 107.957f, 107.802f, 107.501f, 107.2f,   106.898f,
        106.597f, 106.296f, 105.995f, 105.694f, 105.392f, 105.091f, 104.79f,  105.08f,  105.37f,  105.66f,  105.95f,
        106.239f, 106.529f, 106.819f, 107.109f, 107.399f, 107.689f, 107.361f, 107.032f, 106.704f, 106.375f, 106.047f,
        105.719f, 105.39f,  105.062f, 104.733f, 104.405f, 104.369f, 104.333f, 104.297f, 104.261f, 104.225f, 104.19f,
        104.154f, 104.118f, 104.082f, 104.046f, 103.641f, 103.237f, 102.832f, 102.428f, 102.023f, 101.618f, 101.214f,
        100.809f, 100.405f, 100.0f,   99.6334f, 99.2668f, 98.9003f, 98.5337f, 98.1671f, 97.8005f, 97.4339f, 97.0674f,
        96.7008f, 96.3342f, 96.2796f, 96.225f,  96.1703f, 96.1157f, 96.0611f, 96.0065f, 95.9519f, 95.8972f, 95.8426f,
        95.788f,  95.0778f, 94.3675f, 93.6573f, 92.947f,  92.2368f, 91.5266f, 90.8163f, 90.1061f, 89.3958f, 88.6856f,
        88.8177f, 88.9497f, 89.0818f, 89.2138f, 89.3459f, 89.478f,  89.61f,   89.7421f, 89.8741f, 90.0062f, 89.9655f,
        89.9248f, 89.8841f, 89.8434f, 89.8026f, 89.7619f, 89.7212f, 89.6805f, 89.6398f, 89.5991f, 89.4091f, 89.219f,
        89.029f,  88.8389f, 88.6489f, 88.4589f, 88.2688f, 88.0788f, 87.8887f, 87.6987f, 87.2577f, 86.8167f, 86.3757f,
        85.9347f, 85.4936f, 85.0526f, 84.6116f, 84.1706f, 83.7296f, 83.2886f, 83.3297f, 83.3707f, 83.4118f, 83.4528f,
        83.4939f, 83.535f,  83.576f,  83.6171f, 83.6581f, 83.6992f, 83.332f,  82.9647f, 82.5975f, 82.2302f, 81.863f,
        81.4958f, 81.1285f, 80.7613f, 80.394f,  80.0268f, 80.0456f, 80.0644f, 80.0831f, 80.1019f, 80.1207f, 80.1395f,
        80.1583f, 80.177f,  80.1958f, 80.2146f, 80.4209f, 80.6272f, 80.8336f, 81.0399f, 81.2462f, 81.4525f, 81.6588f,
        81.8652f, 82.0715f, 82.2778f, 81.8784f, 81.4791f, 81.0797f, 80.6804f, 80.281f,  79.8816f, 79.4823f, 79.0829f,
        78.6836f, 78.2842f, 77.4279f, 76.5716f, 75.7153f, 74.859f,  74.0027f, 73.1465f, 72.2902f, 71.4339f, 70.5776f,
        69.7213f, 69.9101f, 70.0989f, 70.2876f, 70.4764f, 70.6652f, 70.854f,  71.0428f, 71.2315f, 71.4203f, 71.6091f,
        71.8831f, 72.1571f, 72.4311f, 72.7051f, 72.979f,  73.253f,  73.527f,  73.801f,  74.075f,  74.349f,  73.0745f,
        71.8f,    70.5255f, 69.251f,  67.9765f, 66.702f,  65.4275f, 64.153f,  62.8785f, 61.604f,  62.4322f, 63.2603f,
        64.0885f, 64.9166f, 65.7448f, 66.573f,  67.4011f, 68.2293f, 69.0574f, 69.8856f, 70.4057f, 70.9259f, 71.446f,
        71.9662f, 72.4863f, 73.0064f, 73.5266f, 74.0467f, 74.5669f, 75.087f,  73.9376f, 72.7881f, 71.6387f, 70.4893f,
        69.3398f, 68.1904f, 67.041f,  65.8916f, 64.7421f, 63.5927f, 61.8752f, 60.1578f, 58.4403f, 56.7229f, 55.0054f,
        53.288f,  51.5705f, 49.8531f, 48.1356f, 46.4182f, 48.4569f, 50.4956f, 52.5344f, 54.5731f, 56.6118f, 58.6505f,
        60.6892f, 62.728f,  64.7667f, 66.8054f, 66.4631f, 66.1209f, 65.7786f, 65.4364f, 65.0941f, 64.7518f, 64.4096f,
        64.0673f, 63.7251f, 63.3828f, 63.4749f, 63.567f,  63.6592f, 63.7513f, 63.8434f, 63.9355f, 64.0276f, 64.1198f,
        64.2119f, 64.304f,  63.8188f, 63.3336f, 62.8484f, 62.3632f, 61.8779f, 61.3927f, 60.9075f, 60.4223f, 59.9371f,
        59.4519f, 58.7026f, 57.9533f, 57.204f,  56.4547f, 55.7054f, 54.9562f, 54.2069f, 53.4576f, 52.7083f, 51.959f,
        52.5072f, 53.0553f, 53.6035f, 54.1516f, 54.6998f, 55.248f,  55.7961f, 56.3443f, 56.8924f, 57.4406f, 57.7278f,
        58.015f,  58.3022f, 58.5894f, 58.8765f, 59.1637f, 59.4509f, 59.7381f, 60.0253f, 60.3125f
    };


    static constexpr uint32_t D50_MIN = 360;
    static constexpr uint32_t D50_MAX = 830;
    static constexpr auto D50 = std::array{
        23.9419f, 24.2438f, 24.5457f, 24.8475f, 25.1494f, 25.4513f, 25.7532f, 26.0551f, 26.3569f, 26.6588f, 26.9607f,
        26.7134f, 26.4661f, 26.2187f, 25.9714f, 25.7241f, 25.4768f, 25.2295f, 24.9821f, 24.7348f, 24.4875f, 25.0258f,
        25.5641f, 26.1024f, 26.6407f, 27.179f,  27.7174f, 28.2557f, 28.794f,  29.3323f, 29.8706f, 31.8144f, 33.7581f,
        35.7018f, 37.6456f, 39.5894f, 41.5331f, 43.4768f, 45.4206f, 47.3644f, 49.3081f, 50.0286f, 50.749f,  51.4695f,
        52.19f,   52.9104f, 53.6309f, 54.3514f, 55.0719f, 55.7923f, 56.5128f, 56.8649f, 57.217f,  57.5691f, 57.9212f,
        58.2733f, 58.6254f, 58.9775f, 59.3296f, 59.6817f, 60.0338f, 59.8122f, 59.5905f, 59.3689f, 59.1473f, 58.9256f,
        58.704f,  58.4824f, 58.2608f, 58.0391f, 57.8175f, 59.5182f, 61.219f,  62.9197f, 64.6205f, 66.3212f, 68.0219f,
        69.7227f, 71.4234f, 73.1242f, 74.8249f, 76.0671f, 77.3094f, 78.5516f, 79.7938f, 81.036f,  82.2783f, 83.5205f,
        84.7627f, 86.005f,  87.2472f, 87.5837f, 87.9202f, 88.2567f, 88.5932f, 88.9297f, 89.2662f, 89.6027f, 89.9392f,
        90.2757f, 90.6122f, 90.6878f, 90.7634f, 90.839f,  90.9146f, 90.9902f, 91.0657f, 91.1413f, 91.2169f, 91.2925f,
        91.3681f, 91.7421f, 92.1162f, 92.4902f, 92.8643f, 93.2383f, 93.6123f, 93.9864f, 94.3604f, 94.7345f, 95.1085f,
        94.7939f, 94.4793f, 94.1648f, 93.8502f, 93.5356f, 93.221f,  92.9064f, 92.5919f, 92.2773f, 91.9627f, 92.3388f,
        92.7149f, 93.091f,  93.4671f, 93.8432f, 94.2193f, 94.5954f, 94.9715f, 95.3476f, 95.7237f, 95.8127f, 95.9016f,
        95.9906f, 96.0795f, 96.1685f, 96.2575f, 96.3464f, 96.4354f, 96.5243f, 96.6133f, 96.6649f, 96.7164f, 96.768f,
        96.8196f, 96.8712f, 96.9227f, 96.9743f, 97.0259f, 97.0774f, 97.129f,  97.626f,  98.123f,  98.62f,   99.117f,
        99.614f,  100.111f, 100.608f, 101.105f, 101.602f, 102.099f, 101.965f, 101.83f,  101.696f, 101.561f, 101.427f,
        101.292f, 101.158f, 101.024f, 100.889f, 100.755f, 100.911f, 101.067f, 101.223f, 101.38f,  101.536f, 101.692f,
        101.848f, 102.005f, 102.161f, 102.317f, 102.085f, 101.854f, 101.622f, 101.39f,  101.158f, 100.927f, 100.695f,
        100.463f, 100.232f, 100.0f,   99.7735f, 99.547f,  99.3205f, 99.094f,  98.8675f, 98.641f,  98.4145f, 98.188f,
        97.9615f, 97.735f,  97.8533f, 97.9716f, 98.0899f, 98.2082f, 98.3265f, 98.4448f, 98.5631f, 98.6814f, 98.7997f,
        98.918f,  98.3761f, 97.8342f, 97.2922f, 96.7503f, 96.2084f, 95.6665f, 95.1246f, 94.5826f, 94.0407f, 93.4988f,
        93.9177f, 94.3366f, 94.7555f, 95.1744f, 95.5933f, 96.0122f, 96.4311f, 96.85f,   97.2689f, 97.6878f, 97.8459f,
        98.0041f, 98.1622f, 98.3203f, 98.4784f, 98.6366f, 98.7947f, 98.9528f, 99.111f,  99.2691f, 99.2463f, 99.2236f,
        99.2008f, 99.1781f, 99.1553f, 99.1325f, 99.1098f, 99.087f,  99.0643f, 99.0415f, 98.7095f, 98.3776f, 98.0456f,
        97.7136f, 97.3816f, 97.0497f, 96.7177f, 96.3857f, 96.0538f, 95.7218f, 96.0353f, 96.3489f, 96.6624f, 96.976f,
        97.2895f, 97.603f,  97.9166f, 98.2301f, 98.5437f, 98.8572f, 98.5382f, 98.2192f, 97.9002f, 97.5812f, 97.2622f,
        96.9432f, 96.6242f, 96.3052f, 95.9862f, 95.6672f, 95.9195f, 96.1717f, 96.424f,  96.6762f, 96.9285f, 97.1808f,
        97.433f,  97.6853f, 97.9375f, 98.1898f, 98.6712f, 99.1525f, 99.6339f, 100.115f, 100.597f, 101.078f, 101.559f,
        102.041f, 102.522f, 103.003f, 102.616f, 102.229f, 101.842f, 101.455f, 101.068f, 100.681f, 100.294f, 99.9071f,
        99.52f,   99.133f,  97.9578f, 96.7826f, 95.6074f, 94.4322f, 93.257f,  92.0817f, 90.9065f, 89.7313f, 88.5561f,
        87.3809f, 87.8032f, 88.2254f, 88.6477f, 89.0699f, 89.4922f, 89.9145f, 90.3367f, 90.759f,  91.1812f, 91.6035f,
        91.732f,  91.8605f, 91.989f,  92.1175f, 92.246f,  92.3746f, 92.5031f, 92.6316f, 92.7601f, 92.8886f, 91.2852f,
        89.6818f, 88.0783f, 86.4749f, 84.8715f, 83.2681f, 81.6647f, 80.0612f, 78.4578f, 76.8544f, 77.8201f, 78.7858f,
        79.7514f, 80.7171f, 81.6828f, 82.6485f, 83.6142f, 84.5798f, 85.5455f, 86.5112f, 87.1181f, 87.7249f, 88.3318f,
        88.9386f, 89.5455f, 90.1524f, 90.7592f, 91.3661f, 91.9729f, 92.5798f, 91.1448f, 89.7098f, 88.2748f, 86.8398f,
        85.4048f, 83.9699f, 82.5349f, 81.0999f, 79.6649f, 78.2299f, 76.1761f, 74.1223f, 72.0685f, 70.0147f, 67.9608f,
        65.907f,  63.8532f, 61.7994f, 59.7456f, 57.6918f, 60.2149f, 62.738f,  65.2612f, 67.7843f, 70.3074f, 72.8305f,
        75.3536f, 77.8768f, 80.3999f, 82.923f,  82.4581f, 81.9932f, 81.5283f, 81.0634f, 80.5985f, 80.1336f, 79.6687f,
        79.2038f, 78.7389f, 78.274f,  78.402f,  78.5301f, 78.6581f, 78.7862f, 78.9142f, 79.0422f, 79.1703f, 79.2983f,
        79.4264f, 79.5544f, 78.9391f, 78.3238f, 77.7085f, 77.0932f, 76.478f,  75.8627f, 75.2474f, 74.6321f, 74.0168f,
        73.4015f, 72.4534f, 71.5052f, 70.5571f, 69.609f,  68.6608f, 67.7127f, 66.7646f, 65.8165f, 64.8683f, 63.9202f,
        64.6059f, 65.2916f, 65.9772f, 66.6629f, 67.3486f, 68.0343f, 68.72f,   69.4056f, 70.0913f, 70.777f,  71.1435f,
        71.5099f, 71.8764f, 72.2429f, 72.6094f, 72.9758f, 73.3423f, 73.7088f, 74.0752f, 74.4417f,
    };


    static constexpr uint32_t A_MIN = 360;
    static constexpr uint32_t A_MAX = 830;
    static constexpr auto A = std::array{
        6.14462f, 6.29955f, 6.45724f, 6.61774f, 6.78105f, 6.9472f, 7.11621f, 7.28811f, 7.46292f, 7.64066f, 7.82135f,
        8.00501f, 8.19167f, 8.38134f, 8.57404f, 8.7698f, 8.96864f, 9.17056f, 9.37561f, 9.58378f, 9.7951f, 10.0096f,
        10.2273f, 10.4481f, 10.6722f, 10.8996f, 11.1302f, 11.364f, 11.6012f, 11.8416f, 12.0853f, 12.3324f, 12.5828f,
        12.8366f, 13.0938f, 13.3543f, 13.6182f, 13.8855f, 14.1563f, 14.4304f, 14.708f, 14.9891f, 15.2736f, 15.5616f,
        15.853f, 16.148f, 16.4464f, 16.7484f, 17.0538f, 17.3628f, 17.6753f, 17.9913f, 18.3108f, 18.6339f, 18.9605f,
        19.2907f, 19.6244f, 19.9617f, 20.3026f, 20.647f, 20.995f, 21.3465f, 21.7016f, 22.0603f, 22.4225f, 22.7883f,
        23.1577f, 23.5307f, 23.9072f, 24.2873f, 24.6709f, 25.0581f, 25.4489f, 25.8432f, 26.2411f, 26.6425f, 27.0475f,
        27.456f, 27.8681f, 28.2836f, 28.7027f, 29.1253f, 29.5515f, 29.9811f, 30.4142f, 30.8508f, 31.2909f, 31.7345f,
        32.1815f, 32.632f, 33.0859f, 33.5432f, 34.004f, 34.4682f, 34.9358f, 35.4068f, 35.8811f, 36.3588f, 36.8399f,
        37.3243f, 37.8121f, 38.3031f, 38.7975f, 39.2951f, 39.796f, 40.3002f, 40.8076f, 41.3182f, 41.832f, 42.3491f,
        42.8693f, 43.3926f, 43.9192f, 44.4488f, 44.9816f, 45.5174f, 46.0563f, 46.5983f, 47.1433f, 47.6913f, 48.2423f,
        48.7963f, 49.3533f, 49.9132f, 50.476f, 51.0418f, 51.6104f, 52.1818f, 52.7561f, 53.3332f, 53.9132f, 54.4958f,
        55.0813f, 55.6694f, 56.2603f, 56.8539f, 57.4501f, 58.0489f, 58.6504f, 59.2545f, 59.8611f, 60.4703f, 61.082f,
        61.6962f, 62.3128f, 62.932f, 63.5535f, 64.1775f, 64.8038f, 65.4325f, 66.0635f, 66.6968f, 67.3324f, 67.9702f,
        68.6102f, 69.2525f, 69.8969f, 70.5435f, 71.1922f, 71.843f, 72.4959f, 73.1508f, 73.8077f, 74.4666f, 75.1275f,
        75.7903f, 76.4551f, 77.1217f, 77.7902f, 78.4605f, 79.1326f, 79.8065f, 80.4821f, 81.1595f, 81.8386f, 82.5193f,
        83.2017f, 83.8856f, 84.5712f, 85.2584f, 85.947f, 86.6372f, 87.3288f, 88.0219f, 88.7165f, 89.4124f, 90.1097f,
        90.8083f, 91.5082f, 92.2095f, 92.912f, 93.6157f, 94.3206f, 95.0267f, 95.7339f, 96.4423f, 97.1518f, 97.8623f,
        98.5739f, 99.2864f, 100.0f, 100.715f, 101.43f, 102.146f, 102.864f, 103.582f, 104.301f, 105.02f, 105.741f,
        106.462f, 107.184f, 107.906f, 108.63f, 109.354f, 110.078f, 110.803f, 111.529f, 112.255f, 112.982f, 113.709f,
        114.436f, 115.164f, 115.893f, 116.622f, 117.351f, 118.08f, 118.81f, 119.54f, 120.27f, 121.001f, 121.731f,
        122.462f, 123.193f, 123.924f, 124.655f, 125.386f, 126.118f, 126.849f, 127.58f, 128.312f, 129.043f, 129.774f,
        130.505f, 131.236f, 131.966f, 132.697f, 133.427f, 134.157f, 134.887f, 135.617f, 136.346f, 137.075f, 137.804f,
        138.532f, 139.26f, 139.988f, 140.715f, 141.441f, 142.167f, 142.893f, 143.618f, 144.343f, 145.067f, 145.79f,
        146.513f, 147.235f, 147.957f, 148.678f, 149.398f, 150.117f, 150.836f, 151.554f, 152.271f, 152.988f, 153.704f,
        154.418f, 155.132f, 155.845f, 156.558f, 157.269f, 157.979f, 158.689f, 159.397f, 160.104f, 160.811f, 161.516f,
        162.221f, 162.924f, 163.626f, 164.327f, 165.028f, 165.726f, 166.424f, 167.121f, 167.816f, 168.51f, 169.203f,
        169.895f, 170.586f, 171.275f, 171.963f, 172.65f, 173.335f, 174.019f, 174.702f, 175.383f, 176.063f, 176.741f,
        177.419f, 178.094f, 178.769f, 179.441f, 180.113f, 180.783f, 181.451f, 182.118f, 182.783f, 183.447f, 184.109f,
        184.77f, 185.429f, 186.087f, 186.743f, 187.397f, 188.05f, 188.701f, 189.35f, 189.998f, 190.644f, 191.288f,
        191.931f, 192.572f, 193.211f, 193.849f, 194.484f, 195.118f, 195.75f, 196.381f, 197.009f, 197.636f, 198.261f,
        198.884f, 199.506f, 200.125f, 200.743f, 201.359f, 201.972f, 202.584f, 203.195f, 203.803f, 204.409f, 205.013f,
        205.616f, 206.216f, 206.815f, 207.411f, 208.006f, 208.599f, 209.189f, 209.778f, 210.365f, 210.949f, 211.532f,
        212.112f, 212.691f, 213.268f, 213.842f, 214.415f, 214.985f, 215.553f, 216.12f, 216.684f, 217.246f, 217.806f,
        218.364f, 218.92f, 219.473f, 220.025f, 220.574f, 221.122f, 221.667f, 222.21f, 222.751f, 223.29f, 223.826f,
        224.361f, 224.893f, 225.423f, 225.951f, 226.477f, 227.0f, 227.522f, 228.041f, 228.558f, 229.073f, 229.585f,
        230.096f, 230.604f, 231.11f, 231.614f, 232.115f, 232.615f, 233.112f, 233.606f, 234.099f, 234.589f, 235.078f,
        235.564f, 236.047f, 236.529f, 237.008f, 237.485f, 237.959f, 238.432f, 238.902f, 239.37f, 239.836f, 240.299f,
        240.76f, 241.219f, 241.675f, 242.13f, 242.582f, 243.031f, 243.479f, 243.924f, 244.367f, 244.808f, 245.246f,
        245.682f, 246.116f, 246.548f, 246.977f, 247.404f, 247.829f, 248.251f, 248.671f, 249.089f, 249.505f, 249.918f,
        250.329f, 250.738f, 251.144f, 251.548f, 251.95f, 252.35f, 252.747f, 253.142f, 253.535f, 253.925f, 254.314f,
        254.7f, 255.083f, 255.465f, 255.844f, 256.221f, 256.595f, 256.968f, 257.338f, 257.706f, 258.071f, 258.434f,
        258.795f, 259.154f, 259.511f, 259.865f, 260.217f, 260.567f, 260.914f, 261.259f, 261.602f,
    };


    constexpr float getIlluminantValueAt(const uint32_t wavelengthNano, const Illuminant illuminant) {
        switch (illuminant) {
            case Illuminant::D65: return wavelengthNano > D65_MAX || wavelengthNano < D65_MIN ? 0.0f : D65[wavelengthNano - D65_MIN];
            case Illuminant::D50: return wavelengthNano > D50_MAX || wavelengthNano < D50_MIN ? 0.0f : D50[wavelengthNano - D50_MIN];
            case Illuminant::A:   return wavelengthNano > A_MAX   || wavelengthNano < A_MIN   ? 0.0f : A[wavelengthNano - A_MIN];
            default: throw std::runtime_error("Unrecognized illuminant");
        }
    }


    static constexpr uint32_t CIE1931_MIN = 360;
    static constexpr uint32_t CIE1931_MAX = 830;

    static constexpr auto CIE1931_X = std::array{
        0.0001299f, 0.000145847f, 0.000163802f, 0.000184004f, 0.00020669f, 0.0002321f, 0.000260728f, 0.000293075f,
        0.000329388f, 0.000369914f, 0.0004149f, 0.000464159f, 0.000518986f, 0.000581854f, 0.000655235f, 0.0007416f,
        0.00084503f, 0.000964527f, 0.001094949f, 0.001231154f, 0.001368f, 0.00150205f, 0.001642328f, 0.001802382f,
        0.001995757f, 0.002236f, 0.002535385f, 0.002892603f, 0.003300829f, 0.003753236f, 0.004243f, 0.004762389f,
        0.005330048f, 0.005978712f, 0.006741117f, 0.00765f, 0.008751373f, 0.01002888f, 0.0114217f, 0.01286901f,
        0.01431f, 0.01570443f, 0.01714744f, 0.01878122f, 0.02074801f, 0.02319f, 0.02620736f, 0.02978248f,
        0.03388092f, 0.03846824f, 0.04351f, 0.0489956f, 0.0550226f, 0.0617188f, 0.069212f, 0.07763f, 0.08695811f,
        0.09717672f, 0.1084063f, 0.1207672f, 0.13438f, 0.1493582f, 0.1653957f, 0.1819831f, 0.198611f, 0.21477f,
        0.2301868f, 0.2448797f, 0.2587773f, 0.2718079f, 0.2839f, 0.2949438f, 0.3048965f, 0.3137873f, 0.3216454f,
        0.3285f, 0.3343513f, 0.3392101f, 0.3431213f, 0.3461296f, 0.34828f, 0.3495999f, 0.3501474f, 0.350013f,
        0.349287f, 0.34806f, 0.3463733f, 0.3442624f, 0.3418088f, 0.3390941f, 0.3362f, 0.3331977f, 0.3300411f,
        0.3266357f, 0.3228868f, 0.3187f, 0.3140251f, 0.308884f, 0.3032904f, 0.2972579f, 0.2908f, 0.2839701f,
        0.2767214f, 0.2689178f, 0.2604227f, 0.2511f, 0.2408475f, 0.2298512f, 0.2184072f, 0.2068115f, 0.19536f,
        0.1842136f, 0.1733273f, 0.1626881f, 0.1522833f, 0.1421f, 0.1321786f, 0.1225696f, 0.1132752f, 0.1042979f,
        0.09564f, 0.08729955f, 0.07930804f, 0.07171776f, 0.06458099f, 0.05795001f, 0.05186211f, 0.04628152f,
        0.04115088f, 0.03641283f, 0.03201f, 0.0279172f, 0.0241444f, 0.020687f, 0.0175404f, 0.0147f, 0.01216179f,
        0.00991996f, 0.00796724f, 0.006296346f, 0.0049f, 0.003777173f, 0.00294532f, 0.00242488f, 0.002236293f,
        0.0024f, 0.00292552f, 0.00383656f, 0.00517484f, 0.00698208f, 0.0093f, 0.01214949f, 0.01553588f, 0.01947752f,
        0.02399277f, 0.0291f, 0.03481485f, 0.04112016f, 0.04798504f, 0.05537861f, 0.06327f, 0.07163501f, 0.08046224f,
        0.08973996f, 0.09945645f, 0.1096f, 0.1201674f, 0.1311145f, 0.1423679f, 0.1538542f, 0.1655f, 0.1772571f,
        0.18914f, 0.2011694f, 0.2133658f, 0.2257499f, 0.2383209f, 0.2510668f, 0.2639922f, 0.2771017f, 0.2904f,
        0.3038912f, 0.3175726f, 0.3314384f, 0.3454828f, 0.3597f, 0.3740839f, 0.3886396f, 0.4033784f, 0.4183115f,
        0.4334499f, 0.4487953f, 0.464336f, 0.480064f, 0.4959713f, 0.5120501f, 0.5282959f, 0.5446916f, 0.5612094f,
        0.5778215f, 0.5945f, 0.6112209f, 0.6279758f, 0.6447602f, 0.6615697f, 0.6784f, 0.6952392f, 0.7120586f,
        0.7288284f, 0.7455188f, 0.7621f, 0.7785432f, 0.7948256f, 0.8109264f, 0.8268248f, 0.8425f, 0.8579325f,
        0.8730816f, 0.8878944f, 0.9023181f, 0.9163f, 0.9297995f, 0.9427984f, 0.9552776f, 0.9672179f, 0.9786f,
        0.9893856f, 0.9995488f, 1.0090892f, 1.0180064f, 1.0263f, 1.0339827f, 1.040986f, 1.047188f, 1.0524667f,
        1.0567f, 1.0597944f, 1.0617992f, 1.0628068f, 1.0629096f, 1.0622f, 1.0607352f, 1.0584436f, 1.0552244f,
        1.0509768f, 1.0456f, 1.0390369f, 1.0313608f, 1.0226662f, 1.0130477f, 1.0026f, 0.9913675f, 0.9793314f,
        0.9664916f, 0.9528479f, 0.9384f, 0.923194f, 0.907244f, 0.890502f, 0.87292f, 0.8544499f, 0.835084f,
        0.814946f, 0.794186f, 0.772954f, 0.7514f, 0.7295836f, 0.7075888f, 0.6856022f, 0.6638104f, 0.6424f,
        0.6215149f, 0.6011138f, 0.5811052f, 0.5613977f, 0.5419f, 0.5225995f, 0.5035464f, 0.4847436f, 0.4661939f,
        0.4479f, 0.4298613f, 0.412098f, 0.394644f, 0.3775333f, 0.3608f, 0.3444563f, 0.3285168f, 0.3130192f,
        0.2980011f, 0.2835f, 0.2695448f, 0.2561184f, 0.2431896f, 0.2307272f, 0.2187f, 0.2070971f, 0.1959232f,
        0.1851708f, 0.1748323f, 0.1649f, 0.1553667f, 0.14623f, 0.13749f, 0.1291467f, 0.1212f, 0.1136397f, 0.106465f,
        0.09969044f, 0.09333061f, 0.0874f, 0.08190096f, 0.07680428f, 0.07207712f, 0.06768664f, 0.0636f, 0.05980685f,
        0.05628216f, 0.05297104f, 0.04981861f, 0.04677f, 0.04378405f, 0.04087536f, 0.03807264f, 0.03540461f, 0.0329f,
        0.03056419f, 0.02838056f, 0.02634484f, 0.02445275f, 0.0227f, 0.02108429f, 0.01959988f, 0.01823732f,
        0.01698717f, 0.01584f, 0.01479064f, 0.01383132f, 0.01294868f, 0.0121292f, 0.01135916f, 0.01062935f,
        0.009938846f, 0.009288422f, 0.008678854f, 0.008110916f, 0.007582388f, 0.007088746f, 0.006627313f,
        0.006195408f, 0.005790346f, 0.005409826f, 0.005052583f, 0.004717512f, 0.004403507f, 0.004109457f,
        0.003833913f, 0.003575748f, 0.003334342f, 0.003109075f, 0.002899327f, 0.002704348f, 0.00252302f, 0.002354168f,
        0.002196616f, 0.00204919f, 0.00191096f, 0.001781438f, 0.00166011f, 0.001546459f, 0.001439971f, 0.001340042f,
        0.001246275f, 0.001158471f, 0.00107643f, 0.000999949f, 0.000928736f, 0.000862433f, 0.00080075f, 0.000743396f,
        0.000690079f, 0.000640516f, 0.000594502f, 0.000551865f, 0.000512429f, 0.000476021f, 0.000442454f, 0.000411512f,
        0.000382981f, 0.000356649f, 0.000332301f, 0.000309759f, 0.000288887f, 0.000269539f, 0.000251568f, 0.000234826f,
        0.000219171f, 0.000204526f, 0.000190841f, 0.000178065f, 0.000166151f, 0.000155024f, 0.000144622f, 0.00013491f,
        0.000125852f, 0.000117413f, 0.000109552f, 0.000102225f, 9.53945E-05f, 8.90239E-05f, 8.30753E-05f, 7.75127E-05f,
        7.2313E-05f, 6.74578E-05f, 6.29284E-05f, 5.87065E-05f, 5.47703E-05f, 5.10992E-05f, 4.76765E-05f, 4.44857E-05f,
        4.15099E-05f, 3.87332E-05f, 3.6142E-05f, 3.37235E-05f, 3.14649E-05f, 2.93533E-05f, 2.73757E-05f, 2.55243E-05f,
        2.37938E-05f, 2.21787E-05f, 2.06738E-05f, 1.92723E-05f, 1.79664E-05f, 1.67499E-05f, 1.56165E-05f, 1.45598E-05f,
        1.35739E-05f, 1.26544E-05f, 1.17972E-05f, 1.09984E-05f, 1.0254E-05f, 9.55965E-06f, 8.91204E-06f, 8.30836E-06f,
        7.74577E-06f, 7.22146E-06f, 6.73248E-06f, 6.27642E-06f, 5.8513E-06f, 5.45512E-06f, 5.08587E-06f, 4.74147E-06f,
        4.42024E-06f, 4.12078E-06f, 3.84172E-06f, 3.58165E-06f, 3.33913E-06f, 3.11295E-06f, 2.90212E-06f, 2.70565E-06f,
        2.52253E-06f, 2.35173E-06f, 2.19242E-06f, 2.0439E-06f, 1.9055E-06f, 1.77651E-06f, 1.65622E-06f, 1.54402E-06f,
        1.43944E-06f, 1.34198E-06f, 1.25114E-06f,
    };

    static constexpr auto CIE1931_Y = std::array{
        0.000003917f, 4.39358E-06f, 4.9296E-06f, 5.53214E-06f, 6.20825E-06f, 0.000006965f, 7.81322E-06f, 8.76734E-06f,
        9.83984E-06f, 1.10432E-05f, 0.00001239f, 1.38864E-05f, 1.55573E-05f, 1.7443E-05f, 1.95838E-05f, 0.00002202f,
        2.48397E-05f, 2.80413E-05f, 3.1531E-05f, 3.52152E-05f, 0.000039f, 4.28264E-05f, 4.69146E-05f, 5.15896E-05f,
        5.71764E-05f, 0.000064f, 7.23442E-05f, 8.22122E-05f, 9.35082E-05f, 0.000106136f, 0.00012f, 0.000134984f,
        0.000151492f, 0.000170208f, 0.000191816f, 0.000217f, 0.000246907f, 0.00028124f, 0.00031852f, 0.000357267f,
        0.000396f, 0.000433715f, 0.000473024f, 0.000517876f, 0.000572219f, 0.00064f, 0.00072456f, 0.0008255f,
        0.00094116f, 0.00106988f, 0.00121f, 0.001362091f, 0.001530752f, 0.001720368f, 0.001935323f, 0.00218f,
        0.0024548f, 0.002764f, 0.0031178f, 0.0035264f, 0.004f, 0.00454624f, 0.00515932f, 0.00582928f, 0.00654616f,
        0.0073f, 0.008086507f, 0.00890872f, 0.00976768f, 0.01066443f, 0.0116f, 0.01257317f, 0.01358272f, 0.01462968f,
        0.01571509f, 0.01684f, 0.01800736f, 0.01921448f, 0.02045392f, 0.02171824f, 0.023f, 0.02429461f, 0.02561024f,
        0.02695857f, 0.02835125f, 0.0298f, 0.03131083f, 0.03288368f, 0.03452112f, 0.03622571f, 0.038f, 0.03984667f,
        0.041768f, 0.043766f, 0.04584267f, 0.048f, 0.05024368f, 0.05257304f, 0.05498056f, 0.05745872f, 0.06f,
        0.06260197f, 0.06527752f, 0.06804208f, 0.07091109f, 0.0739f, 0.077016f, 0.0802664f, 0.0836668f, 0.0872328f,
        0.09098f, 0.09491755f, 0.09904584f, 0.1033674f, 0.1078846f, 0.1126f, 0.117532f, 0.1226744f, 0.1279928f,
        0.1334528f, 0.13902f, 0.1446764f, 0.1504693f, 0.1564619f, 0.1627177f, 0.1693f, 0.1762431f, 0.1835581f,
        0.1912735f, 0.199418f, 0.20802f, 0.2171199f, 0.2267345f, 0.2368571f, 0.2474812f, 0.2586f, 0.2701849f,
        0.2822939f, 0.2950505f, 0.308578f, 0.323f, 0.3384021f, 0.3546858f, 0.3716986f, 0.3892875f, 0.4073f, 0.4256299f,
        0.4443096f, 0.4633944f, 0.4829395f, 0.503f, 0.5235693f, 0.544512f, 0.56569f, 0.5869653f, 0.6082f, 0.6293456f,
        0.6503068f, 0.6708752f, 0.6908424f, 0.71f, 0.7281852f, 0.7454636f, 0.7619694f, 0.7778368f, 0.7932f, 0.8081104f,
        0.8224962f, 0.8363068f, 0.8494916f, 0.862f, 0.8738108f, 0.8849624f, 0.8954936f, 0.9054432f, 0.9148501f,
        0.9237348f, 0.9320924f, 0.9399226f, 0.9472252f, 0.954f, 0.9602561f, 0.9660074f, 0.9712606f, 0.9760225f,
        0.9803f, 0.9840924f, 0.9874182f, 0.9903128f, 0.9928116f, 0.9949501f, 0.9967108f, 0.9980983f, 0.999112f,
        0.9997482f, 1.0f, 0.9998567f, 0.9993046f, 0.9983255f, 0.9968987f, 0.995f, 0.9926005f, 0.9897426f, 0.9864444f,
        0.9827241f, 0.9786f, 0.9740837f, 0.9691712f, 0.9638568f, 0.9581349f, 0.952f, 0.9454504f, 0.9384992f,
        0.9311628f, 0.9234576f, 0.9154f, 0.9070064f, 0.8982772f, 0.8892048f, 0.8797816f, 0.87f, 0.8598613f, 0.849392f,
        0.838622f, 0.8275813f, 0.8163f, 0.8047947f, 0.793082f, 0.781192f, 0.7691547f, 0.757f, 0.7447541f, 0.7324224f,
        0.7200036f, 0.7074965f, 0.6949f, 0.6822192f, 0.6694716f, 0.6566744f, 0.6438448f, 0.631f, 0.6181555f, 0.6053144f,
        0.5924756f, 0.5796379f, 0.5668f, 0.5539611f, 0.5411372f, 0.5283528f, 0.5156323f, 0.503f, 0.4904688f, 0.4780304f,
        0.4656776f, 0.4534032f, 0.4412f, 0.42908f, 0.417036f, 0.405032f, 0.393032f, 0.381f, 0.3689184f, 0.3568272f,
        0.3447768f, 0.3328176f, 0.321f, 0.3093381f, 0.2978504f, 0.2865936f, 0.2756245f, 0.265f, 0.2547632f, 0.2448896f,
        0.2353344f, 0.2260528f, 0.217f, 0.2081616f, 0.1995488f, 0.1911552f, 0.1829744f, 0.175f, 0.1672235f, 0.1596464f,
        0.1522776f, 0.1451259f, 0.1382f, 0.1315003f, 0.1250248f, 0.1187792f, 0.1127691f, 0.107f, 0.1014762f,
        0.09618864f, 0.09112296f, 0.08626485f, 0.0816f, 0.07712064f, 0.07282552f, 0.06871008f, 0.06476976f, 0.061f,
        0.05739621f, 0.05395504f, 0.05067376f, 0.04754965f, 0.04458f, 0.04175872f, 0.03908496f, 0.03656384f,
        0.03420048f, 0.032f, 0.02996261f, 0.02807664f, 0.02632936f, 0.02470805f, 0.0232f, 0.02180077f, 0.02050112f,
        0.01928108f, 0.01812069f, 0.017f, 0.01590379f, 0.01483718f, 0.01381068f, 0.01283478f, 0.01192f, 0.01106831f,
        0.01027339f, 0.009533311f, 0.008846157f, 0.00821f, 0.007623781f, 0.007085424f, 0.006591476f, 0.006138485f,
        0.005723f, 0.005343059f, 0.004995796f, 0.004676404f, 0.004380075f, 0.004102f, 0.003838453f, 0.003589099f,
        0.003354219f, 0.003134093f, 0.002929f, 0.002738139f, 0.002559876f, 0.002393244f, 0.002237275f, 0.002091f,
        0.001953587f, 0.00182458f, 0.00170358f, 0.001590187f, 0.001484f, 0.001384496f, 0.001291268f, 0.001204092f,
        0.001122744f, 0.001047f, 0.00097659f, 0.000911109f, 0.000850133f, 0.000793238f, 0.00074f, 0.000690083f,
        0.00064331f, 0.000599496f, 0.000558455f, 0.00052f, 0.000483914f, 0.000450053f, 0.000418345f, 0.000388718f,
        0.0003611f, 0.000335384f, 0.00031144f, 0.000289166f, 0.000268454f, 0.0002492f, 0.000231302f, 0.000214686f,
        0.000199288f, 0.000185048f, 0.0001719f, 0.000159778f, 0.000148604f, 0.000138302f, 0.000128793f, 0.00012f,
        0.00011186f, 0.000104322f, 9.73356E-05f, 9.08459E-05f, 0.0000848f, 7.91467E-05f, 0.000073858f, 0.000068916f,
        6.43027E-05f, 0.00006f, 5.59819E-05f, 5.22256E-05f, 4.87184E-05f, 4.54475E-05f, 0.0000424f, 3.9561E-05f,
        3.69151E-05f, 3.44487E-05f, 3.21482E-05f, 0.00003f, 2.79913E-05f, 2.61136E-05f, 2.43602E-05f, 2.27246E-05f,
        0.0000212f, 1.97786E-05f, 1.84529E-05f, 1.72169E-05f, 1.60646E-05f, 0.00001499f, 1.39873E-05f, 1.30516E-05f,
        1.21782E-05f, 1.13625E-05f, 0.0000106f, 9.88588E-06f, 9.2173E-06f, 8.59236E-06f, 8.00913E-06f, 7.4657E-06f,
        6.95957E-06f, 6.488E-06f, 6.0487E-06f, 5.6394E-06f, 5.2578E-06f, 4.90177E-06f, 4.56972E-06f, 4.26019E-06f,
        3.97174E-06f, 3.7029E-06f, 3.45216E-06f, 3.2183E-06f, 3.0003E-06f, 2.79714E-06f, 2.6078E-06f, 2.43122E-06f,
        2.26653E-06f, 2.11301E-06f, 1.96994E-06f, 1.8366E-06f, 1.71223E-06f, 1.59623E-06f, 1.48809E-06f, 1.38731E-06f,
        1.2934E-06f, 1.20582E-06f, 1.12414E-06f, 1.04801E-06f, 9.77058E-07f, 9.1093E-07f, 8.49251E-07f, 7.91721E-07f,
        7.3809E-07f, 6.8811E-07f, 6.4153E-07f, 5.9809E-07f, 5.57575E-07f, 5.19808E-07f, 4.84612E-07f, 4.5181E-07f,
    };

    static constexpr auto CIE1931_Z = std::array{
        0.0006061f, 0.000680879f, 0.000765146f, 0.000860012f, 0.000966593f, 0.001086f, 0.001220586f, 0.001372729f,
        0.001543579f, 0.001734286f, 0.001946f, 0.002177777f, 0.002435809f, 0.002731953f, 0.003078064f, 0.003486f,
        0.003975227f, 0.00454088f, 0.00515832f, 0.005802907f, 0.006450001f, 0.007083216f, 0.007745488f, 0.008501152f,
        0.009414544f, 0.01054999f, 0.0119658f, 0.01365587f, 0.01558805f, 0.01773015f, 0.02005001f, 0.02251136f,
        0.02520288f, 0.02827972f, 0.03189704f, 0.03621f, 0.04143771f, 0.04750372f, 0.05411988f, 0.06099803f,
        0.06785001f, 0.07448632f, 0.08136156f, 0.08915364f, 0.09854048f, 0.1102f, 0.1246133f, 0.1417017f, 0.1613035f,
        0.1832568f, 0.2074f, 0.2336921f, 0.2626114f, 0.2947746f, 0.3307985f, 0.3713f, 0.4162091f, 0.4654642f,
        0.5196948f, 0.5795303f, 0.6456f, 0.7184838f, 0.7967133f, 0.8778459f, 0.959439f, 1.0390501f, 1.1153673f,
        1.1884971f, 1.2581233f, 1.3239296f, 1.3856f, 1.4426352f, 1.4948035f, 1.5421903f, 1.5848807f, 1.62296f,
        1.6564048f, 1.6852959f, 1.7098745f, 1.7303821f, 1.74706f, 1.7600446f, 1.7696233f, 1.7762637f, 1.7804334f,
        1.7826f, 1.7829682f, 1.7816998f, 1.7791982f, 1.7758671f, 1.77211f, 1.7682589f, 1.764039f, 1.7589438f,
        1.7524663f, 1.7441f, 1.7335595f, 1.7208581f, 1.7059369f, 1.6887372f, 1.6692f, 1.6475287f, 1.6234127f,
        1.5960223f, 1.564528f, 1.5281f, 1.4861114f, 1.4395215f, 1.3898799f, 1.3387362f, 1.28764f, 1.2374223f,
        1.1878243f, 1.1387611f, 1.090148f, 1.0419f, 0.9941976f, 0.9473473f, 0.9014531f, 0.8566193f, 0.8129501f,
        0.7705173f, 0.7294448f, 0.6899136f, 0.6521049f, 0.6162f, 0.5823286f, 0.5504162f, 0.5203376f, 0.4919673f,
        0.46518f, 0.4399246f, 0.4161836f, 0.3938822f, 0.3729459f, 0.3533f, 0.3348578f, 0.3175521f, 0.3013375f,
        0.2861686f, 0.272f, 0.2588171f, 0.2464838f, 0.2347718f, 0.2234533f, 0.2123f, 0.2011692f, 0.1901196f,
        0.1792254f, 0.1685608f, 0.1582f, 0.1481383f, 0.1383758f, 0.1289942f, 0.1200751f, 0.1117f, 0.1039048f,
        0.09666748f, 0.08998272f, 0.08384531f, 0.07824999f, 0.07320899f, 0.06867816f, 0.06456784f, 0.06078835f,
        0.05725001f, 0.05390435f, 0.05074664f, 0.04775276f, 0.04489859f, 0.04216f, 0.03950728f, 0.03693564f,
        0.03445836f, 0.03208872f, 0.02984f, 0.02771181f, 0.02569444f, 0.02378716f, 0.02198925f, 0.0203f, 0.01871805f,
        0.01724036f, 0.01586364f, 0.01458461f, 0.0134f, 0.01230723f, 0.01130188f, 0.01037792f, 0.009529306f,
        0.008749999f, 0.0080352f, 0.0073816f, 0.0067854f, 0.0062428f, 0.005749999f, 0.0053036f, 0.0048998f,
        0.0045342f, 0.0042024f, 0.0039f, 0.0036232f, 0.0033706f, 0.0031414f, 0.0029348f, 0.002749999f, 0.0025852f,
        0.0024386f, 0.0023094f, 0.0021968f, 0.0021f, 0.002017733f, 0.0019482f, 0.0018898f, 0.001840933f, 0.0018f,
        0.001766267f, 0.0017378f, 0.0017112f, 0.001683067f, 0.001650001f, 0.001610133f, 0.0015644f, 0.0015136f,
        0.001458533f, 0.0014f, 0.001336667f, 0.00127f, 0.001205f, 0.001146667f, 0.0011f, 0.0010688f, 0.0010494f,
        0.0010356f, 0.0010212f, 0.001f, 0.00096864f, 0.00092992f, 0.00088688f, 0.00084256f, 0.0008f, 0.00076096f,
        0.00072368f, 0.00068592f, 0.00064544f, 0.0006f, 0.000547867f, 0.0004916f, 0.0004354f, 0.000383467f, 0.00034f,
        0.000307253f, 0.00028316f, 0.00026544f, 0.000251813f, 0.00024f, 0.000229547f, 0.00022064f, 0.00021196f,
        0.000202187f, 0.00019f, 0.000174213f, 0.00015564f, 0.00013596f, 0.000116853f, 0.0001f, 8.61333E-05f,
        0.0000746f, 0.000065f, 5.69333E-05f, 5E-05f, 0.00004416f, 0.00003948f, 0.00003572f, 0.00003264f, 0.00003f,
        2.76533E-05f, 0.00002556f, 0.00002364f, 2.18133E-05f, 0.00002f, 1.81333E-05f, 0.0000162f, 0.0000142f,
        1.21333E-05f, 0.00001f, 7.73333E-06f, 0.0000054f, 0.0000032f, 1.33333E-06f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
        0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
        0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
        0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
        0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
        0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
        0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
        0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
        0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
        0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
        0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f,
    };

    constexpr float getSensorXValueAt(const uint32_t wavelengthNano, const Sensor sensor) {
        switch (sensor) {
            case Sensor::CIE1931: return wavelengthNano > CIE1931_MAX || wavelengthNano < CIE1931_MIN ? 0.0f : CIE1931_X[wavelengthNano - CIE1931_MIN];
            default: throw std::runtime_error("Unrecognized sensor");
        }
    }

    constexpr float getSensorYValueAt(const uint32_t wavelengthNano, const Sensor sensor) {
        switch (sensor) {
            case Sensor::CIE1931: return wavelengthNano > CIE1931_MAX || wavelengthNano < CIE1931_MIN ? 0.0f : CIE1931_Y[wavelengthNano - CIE1931_MIN];
            default: throw std::runtime_error("Unrecognized sensor");
        }
    }

    constexpr float getSensorZValueAt(const uint32_t wavelengthNano, const Sensor sensor) {
        switch (sensor) {
            case Sensor::CIE1931: return wavelengthNano > CIE1931_MAX || wavelengthNano < CIE1931_MIN ? 0.0f : CIE1931_Z[wavelengthNano - CIE1931_MIN];
            default: throw std::runtime_error("Unrecognized sensor");
        }
    }
}